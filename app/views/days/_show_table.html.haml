- @day ||= local_assigns[:day]
%table.table
  %thead
    %tr
      %th
      %th{:scope => "col"} Name
      %th{:scope => "col"} Reps/time
      %th{:scope => "col"} Rest
      - if @day.week.number == 1
        %th Test Result
      - else
        %th Workout reps/time
      - unless @day.week.number == 1
        %th{:scope => "col"} Percentage
      %th{:scope => "col"} Set(s)
      %th Notes
  %tbody
    - if @day.exercises.pluck(:grouped).include?(true)
      %h3= "Circuit Exercise"
    - @day.exercises.order(:number,:grouped).each do |exercise|
      %tr
        %td=exercise.number
        %td= exercise.workout_name.name.titleize
        %td= exercise.intensity
        - unless @day.week.number == 1
          %td= exercise&.sets_rest_time&.name
        - if @day.week.number == 1
          %td
            = turbo_frame_tag exercise do
              = render partial: 'days/update_test_result', locals: { exercise: exercise }
        - else
          %td= exercise.workout_value
        - unless @day.week.number == 1
          %td= exercise.percentage
        %td
          = turbo_frame_tag dom_id(exercise, :set_trackers) do
            = render partial: 'days/set_tracker_form', locals: { exercise: exercise}
        %td
          = turbo_frame_tag dom_id(exercise, :notes) do
            = render partial: 'exercises/notes_form', locals: { exercise: exercise}
      - if exercise.exercise_rest_time.present? && @day.exercises.order(:number).last != exercise
        %tr
          %td
          %td
          %td
          %td
            = exercise.exercise_rest_time.name
          %td
          %td
  .btn.float-right
- if previous_day = find_previous_day(@day)
  = button_to previous_day&.day_name&.name, day_path(id: previous_day&.id), method: :get
- if next_day = find_next_day(@day)
  = button_to next_day&.day_name&.name, day_path(id: next_day&.id), method: :get
- else
  = button_to 'Next Week', week_path(id: @day.week&.id + 1), method: :get
